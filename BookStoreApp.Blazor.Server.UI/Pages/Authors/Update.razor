@page "/authors/update/{id:int}"

@inject IAuthorService authorService
@inject NavigationManager _navigationManager
@*@attribute [Authorize(Roles =Roles.Administrator)]*@

<h3>Update Author</h3>

<EditForm Model="Author" OnValidSubmit="HandleUpdateAuthor">
    <DataAnnotationsValidator/>
    <ValidationSummary/>

    <div class="form-group">
            <label for="FirstName">First Name</label>
            <InputText class="form-control" @bind-Value="Author.FirstName"/>
            <ValidationMessage For="@(()=> Author.FirstName)"></ValidationMessage>
        </div>
        
        <div class="form-group">
            <label for="LastName">Last Name</label>
            <InputText class="form-control" @bind-Value="Author.LastName"/>
            <ValidationMessage For="@(()=> Author.LastName)"></ValidationMessage>
        </div>

        <div class="form-group">
            <label for="email">Biography</label>
            <InputText class="form-control" @bind-Value="Author.Bio"/>
            <ValidationMessage For="@(()=> Author.Bio)"></ValidationMessage>
        </div>
        <br />

            <button type="submit" class="btn btn-primary btn-danger">
                <span class="oi oi-pencil"></span> 
                Update Author</button> 
            <button type="button" @onclick="BackToAuthorList" class="btn btn-primary btn-danger">
                <span class="oi oi-media-skip-backward"></span> 
                Back To List
            </button>

</EditForm>

@code {
    [Parameter]
    public int id{ get; set; }

    private AuthorUpdateDto Author = new AuthorUpdateDto();

    protected override async Task OnInitializedAsync()
    {
        var response = await authorService.GetForUpdate(id);
        if (response.Success)
        {
            Author = response.Data;
        }
    }
    private async Task HandleUpdateAuthor()
    {
        var response =await  authorService.Edit(id,author:Author);
        if (response.Success)
        {
            BackToAuthorList();
        }
    } 
    private void BackToAuthorList()
    {
       _navigationManager.NavigateTo("/authors/");
    }
}
